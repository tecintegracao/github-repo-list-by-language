{"ast":null,"code":"import _slicedToArray from \"/home/sergio/Documentos/topi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sergio/Documentos/topi/web/src/components/SelectLanguages/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport GitLanguages from '../../utils/GitLanguages';\nimport './style.css';\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport './style.css';\n\nfunction SelectLanguages({\n  selectedLanguage,\n  setSelectedLanguage\n}) {\n  const _useState = useState(['Assembly', 'C', 'Java', 'JavaScript']),\n        _useState2 = _slicedToArray(_useState, 2),\n        languages = _useState2[0],\n        setLanguages = _useState2[1];\n\n  useEffect(() => {\n    async function loadLanguages() {\n      const response = await GitLanguages();\n      setLanguages(response);\n    }\n\n    loadLanguages();\n  }, []);\n  return React.createElement(FormControl, {\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"selectLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Linguagem:\"), React.createElement(Select, {\n    name: \"programmingLanguages\",\n    id: \"programmingLanguages\",\n    value: selectedLanguage,\n    onChange: event => setSelectedLanguage(event.target.value),\n    autoWidth: true,\n    variant: \"outlined\",\n    labelId: \"selectLabel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, languages.map(lang => React.createElement(MenuItem, {\n    key: lang,\n    value: lang,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, lang))));\n}\n\nexport default SelectLanguages;","map":{"version":3,"sources":["/home/sergio/Documentos/topi/web/src/components/SelectLanguages/index.js"],"names":["React","useState","useEffect","GitLanguages","Select","MenuItem","InputLabel","FormControl","SelectLanguages","selectedLanguage","setSelectedLanguage","languages","setLanguages","loadLanguages","response","event","target","value","map","lang"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAO,aAAP;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,WAAvC,QAA0D,mBAA1D;AACA,OAAO,aAAP;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAzB,EAAoE;AAAA,oBAChCT,QAAQ,CAAC,CACzC,UADyC,EAEzC,GAFyC,EAGzC,MAHyC,EAIzC,YAJyC,CAAD,CADwB;AAAA;AAAA,QAC3DU,SAD2D;AAAA,QAChDC,YADgD;;AAQlEV,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,aAAf,GAA+B;AAC7B,YAAMC,QAAQ,GAAG,MAAMX,YAAY,EAAnC;AACAS,MAAAA,YAAY,CAACE,QAAD,CAAZ;AACD;;AACDD,IAAAA,aAAa;AACd,GANQ,EAMN,EANM,CAAT;AAOA,SACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,sBADP;AAEE,IAAA,EAAE,EAAC,sBAFL;AAGE,IAAA,KAAK,EAAEJ,gBAHT;AAIE,IAAA,QAAQ,EAAEM,KAAK,IAAIL,mBAAmB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJxC;AAKE,IAAA,SAAS,MALX;AAME,IAAA,OAAO,EAAC,UANV;AAOE,IAAA,OAAO,EAAC,aAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGN,SAAS,CAACO,GAAV,CAAcC,IAAI,IACjB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAf;AAAqB,IAAA,KAAK,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADD,CATH,CAFF,CADF;AAoBD;;AAED,eAAeX,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GitLanguages from '../../utils/GitLanguages';\nimport './style.css';\n\nimport { Select, MenuItem, InputLabel, FormControl } from '@material-ui/core';\nimport './style.css';\n\nfunction SelectLanguages({ selectedLanguage, setSelectedLanguage }) {\n  const [languages, setLanguages] = useState([\n    'Assembly',\n    'C',\n    'Java',\n    'JavaScript'\n  ]);\n\n  useEffect(() => {\n    async function loadLanguages() {\n      const response = await GitLanguages();\n      setLanguages(response);\n    }\n    loadLanguages();\n  }, []);\n  return (\n    <FormControl fullWidth>\n      <InputLabel id='selectLabel'>Linguagem:</InputLabel>\n      <Select\n        name='programmingLanguages'\n        id='programmingLanguages'\n        value={selectedLanguage}\n        onChange={event => setSelectedLanguage(event.target.value)}\n        autoWidth\n        variant='outlined'\n        labelId='selectLabel'\n      >\n        {languages.map(lang => (\n          <MenuItem key={lang} value={lang}>\n            {lang}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default SelectLanguages;\n"]},"metadata":{},"sourceType":"module"}