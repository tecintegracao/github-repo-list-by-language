{"ast":null,"code":"import _slicedToArray from \"/home/sergio/Documentos/topi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sergio/Documentos/topi/web/src/components/RepoList/index.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({\n  selectedLanguage,\n  repositories,\n  setRepositories\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState({\n    items: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        response = _useState6[0],\n        setResponse = _useState6[1];\n\n  const observer = useRef();\n  useEffect(() => {\n    observer.current && observer.current.focus();\n  });\n  const lastRepoRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {});\n    if (node) observer.current.observe(node);\n    console.log(node);\n  }, [loading]);\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    }).then(resp => {\n      setResponse(resp.data);\n      setLoading(false);\n      setError(false);\n    }).catch(er => {\n      setError(true);\n      setLoading(false);\n    });\n    /*eslint-disable */\n  }, [selectedLanguage]);\n  useEffect(() => {\n    response.total_count === 0 ? setRepositories([]) : setRepositories(() => {\n      const temp = [...repositories, ...response.items];\n      return DupObjArrRemover(temp);\n    });\n    /*eslint-disable */\n  }, [response]);\n  useEffect(() => {\n    setRepositories([]);\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loadingbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      disableShrink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))));\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, repositories.map((repo, index) => {\n        if (repositories.length === index + 1) {\n          return React.createElement(RepoItem, {\n            ref: lastRepoRef,\n            key: repo.id,\n            repo: repo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(RepoItem, {\n            key: repo.id,\n            repo: repo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n        }\n      }));\n    } else {\n      if (error) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Erro ao carregar. Por favor, tente novamente.\");\n      } else return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"N\\xE3o existem reposit\\xF3rios na linguagem selecionada.\");\n    }\n  }\n}\n\nexport default RepoList;","map":{"version":3,"sources":["/home/sergio/Documentos/topi/web/src/components/RepoList/index.js"],"names":["React","useState","useEffect","useRef","useCallback","axios","CircularProgress","DupObjArrRemover","RepoItem","RepoList","selectedLanguage","repositories","setRepositories","loading","setLoading","error","setError","items","response","setResponse","observer","current","focus","lastRepoRef","node","disconnect","IntersectionObserver","entries","observe","console","log","language","replace","method","url","then","resp","data","catch","er","total_count","temp","Array","isArray","length","map","repo","index","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\n\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({ selectedLanguage, repositories, setRepositories }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [response, setResponse] = useState({ items: [] });\n\n  const observer = useRef();\n  useEffect(() => {\n    observer.current && observer.current.focus();\n  });\n  const lastRepoRef = useCallback(\n    node => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver(entries => {});\n      if (node) observer.current.observe(node);\n      console.log(node);\n    },\n    [loading]\n  );\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    })\n      .then(resp => {\n        setResponse(resp.data);\n        setLoading(false);\n        setError(false);\n      })\n      .catch(er => {\n        setError(true);\n        setLoading(false);\n      });\n    /*eslint-disable */\n  }, [selectedLanguage]);\n\n  useEffect(() => {\n    response.total_count === 0\n      ? setRepositories([])\n      : setRepositories(() => {\n          const temp = [...repositories, ...response.items];\n          return DupObjArrRemover(temp);\n        });\n    /*eslint-disable */\n  }, [response]);\n\n  useEffect(() => {\n    setRepositories([]);\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return (\n      <div className='overlay'>\n        <div className='loading'>\n          <div className='loadingbar'>\n            <CircularProgress disableShrink />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return (\n        <ul>\n          {repositories.map((repo, index) => {\n            if (repositories.length === index + 1) {\n              return <RepoItem ref={lastRepoRef} key={repo.id} repo={repo} />;\n            } else {\n              return <RepoItem key={repo.id} repo={repo} />;\n            }\n          })}\n        </ul>\n      );\n    } else {\n      if (error) {\n        return <h1>Erro ao carregar. Por favor, tente novamente.</h1>;\n      } else return <h1>Não existem repositórios na linguagem selecionada.</h1>;\n    }\n  }\n}\n\nexport default RepoList;\n"]},"metadata":{},"sourceType":"module"}