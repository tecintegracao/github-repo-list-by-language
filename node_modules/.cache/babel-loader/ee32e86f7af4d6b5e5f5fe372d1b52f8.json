{"ast":null,"code":"import _slicedToArray from \"/home/sergio/Documentos/topi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sergio/Documentos/topi/web/src/components/RepoList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({\n  selectedLanguage,\n  repositories,\n  setRepositories\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState({\n    items: []\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        response = _useState6[0],\n        setResponse = _useState6[1];\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    }).then(resp => {\n      setResponse(resp.data);\n      setRepositories([]);\n      setLoading(false);\n      setError(false);\n    }).catch(er => {\n      setError(true);\n      setLoading(false);\n    });\n  }, [selectedLanguage, setRepositories]);\n  useEffect(() => {\n    response.total_count === 0 ? setRepositories([]) : setRepositories(() => {\n      const temp = [...repositories, ...response.items];\n      return DupObjArrRemover(temp);\n    });\n    /*eslint-disable */\n  }, [response]);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loadingbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      disableShrink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }))));\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, repositories.map(repo => React.createElement(RepoItem, {\n        key: repo.id,\n        repo: repo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    } else {\n      if (error) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Erro ao carregar, por favor, tente novamente.\");\n      } else return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"N\\xE3o existem reposit\\xF3rios na linguagem selecionada.\");\n    }\n  }\n}\n\nexport default RepoList;","map":{"version":3,"sources":["/home/sergio/Documentos/topi/web/src/components/RepoList/index.js"],"names":["React","useState","useEffect","axios","CircularProgress","DupObjArrRemover","RepoItem","RepoList","selectedLanguage","repositories","setRepositories","loading","setLoading","error","setError","items","response","setResponse","language","replace","method","url","then","resp","data","catch","er","total_count","temp","Array","isArray","length","map","repo","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\n\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({ selectedLanguage, repositories, setRepositories }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [response, setResponse] = useState({ items: [] });\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    })\n      .then(resp => {\n        setResponse(resp.data);\n        setRepositories([]);\n        setLoading(false);\n        setError(false);\n      })\n      .catch(er => {\n        setError(true);\n        setLoading(false);\n      });\n  }, [selectedLanguage, setRepositories]);\n\n  useEffect(() => {\n    response.total_count === 0\n      ? setRepositories([])\n      : setRepositories(() => {\n          const temp = [...repositories, ...response.items];\n          return DupObjArrRemover(temp);\n        });\n    /*eslint-disable */\n  }, [response]);\n\n  if (loading) {\n    return (\n      <div className='overlay'>\n        <div className='loading'>\n          <div className='loadingbar'>\n            <CircularProgress disableShrink />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return (\n        <ul>\n          {repositories.map(repo => (\n            <RepoItem key={repo.id} repo={repo} />\n          ))}\n        </ul>\n      );\n    } else {\n      if (error) {\n        return <h1>Erro ao carregar, por favor, tente novamente.</h1>;\n      } else return <h1>Não existem repositórios na linguagem selecionada.</h1>;\n    }\n  }\n}\n\nexport default RepoList;\n"]},"metadata":{},"sourceType":"module"}