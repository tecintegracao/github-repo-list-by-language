{"ast":null,"code":"import _slicedToArray from \"/home/sergio/Documentos/topi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sergio/Documentos/topi/web/src/components/RepoList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({\n  selectedLanguage\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        response = _useState6[0],\n        setResponse = _useState6[1];\n\n  const _useState7 = useState({\n    data: []\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        repositories = _useState8[0],\n        setRepositories = _useState8[1];\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    }).then(response => {\n      response.data.total_count === 0 ? setRepositories({\n        data: []\n      }) : setRepositories(prevRepos => {\n        const oldData = prevRepos.data.map(repo => repo);\n        console.log(oldData);\n        return {\n          data: 'test'\n        };\n      });\n      setLoading(false);\n      setError(false);\n    }).catch(er => {\n      setError(true);\n      setLoading(false);\n    });\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loadingbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      disableShrink: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))));\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    } else {\n      if (error) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Erro ao carregar, por favor, tente novamente.\");\n      } else return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"N\\xE3o existem reposit\\xF3rios na linguagem selecionada.\");\n    }\n  }\n}\n\nexport default RepoList;","map":{"version":3,"sources":["/home/sergio/Documentos/topi/web/src/components/RepoList/index.js"],"names":["React","useState","useEffect","axios","CircularProgress","DupObjArrRemover","RepoItem","RepoList","selectedLanguage","loading","setLoading","error","setError","response","setResponse","data","repositories","setRepositories","language","replace","method","url","then","total_count","prevRepos","oldData","map","repo","console","log","catch","er","Array","isArray","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAO,aAAP;AAEA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAwC;AAAA,oBACRP,QAAQ,CAAC,IAAD,CADA;AAAA;AAAA,QAC/BQ,OAD+B;AAAA,QACtBC,UADsB;;AAAA,qBAEZT,QAAQ,CAAC,KAAD,CAFI;AAAA;AAAA,QAE/BU,KAF+B;AAAA,QAExBC,QAFwB;;AAAA,qBAGNX,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,QAG/BY,QAH+B;AAAA,QAGrBC,WAHqB;;AAAA,qBAKEb,QAAQ,CAAC;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAD,CALV;AAAA;AAAA,QAK/BC,YAL+B;AAAA,QAKjBC,eALiB;;AAOtCf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAQ,GAAGV,gBAAgB,CAACW,OAAjB,CAAyB,YAAzB,EAAuC,IAAvC,CAAf;AAEAhB,IAAAA,KAAK,CAAC;AACJiB,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAG,yDAAwDH,QAAS;AAFnE,KAAD,CAAL,CAIGI,IAJH,CAIQT,QAAQ,IAAI;AAChBA,MAAAA,QAAQ,CAACE,IAAT,CAAcQ,WAAd,KAA8B,CAA9B,GACIN,eAAe,CAAC;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAD,CADnB,GAEIE,eAAe,CAACO,SAAS,IAAI;AAC3B,cAAMC,OAAO,GAAGD,SAAS,CAACT,IAAV,CAAeW,GAAf,CAAmBC,IAAI,IAAIA,IAA3B,CAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,eAAO;AACLV,UAAAA,IAAI,EAAE;AADD,SAAP;AAGD,OANc,CAFnB;AASAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAhBH,EAiBGkB,KAjBH,CAiBSC,EAAE,IAAI;AACXnB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KApBH;AAqBD,GAxBQ,EAwBN,CAACF,gBAAD,CAxBM,CAAT;;AA0BA,MAAIC,OAAJ,EAAa;AACX,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAkB,MAAA,aAAa,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AASD,GAVD,MAUO;AACL,QAAIuB,KAAK,CAACC,OAAN,CAAcjB,YAAd,KAA+BA,YAAY,CAACkB,MAAhD,EAAwD;AACtD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARD,MAQO;AACL,UAAIvB,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAP;AACD,OAFD,MAEO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAP;AACR;AACF;AACF;;AAED,eAAeJ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\n\nimport RepoItem from '../RepoItem';\n\nfunction RepoList({ selectedLanguage }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [response, setResponse] = useState([]);\n\n  const [repositories, setRepositories] = useState({ data: [] });\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=1`\n    })\n      .then(response => {\n        response.data.total_count === 0\n          ? setRepositories({ data: [] })\n          : setRepositories(prevRepos => {\n              const oldData = prevRepos.data.map(repo => repo);\n              console.log(oldData);\n              return {\n                data: 'test'\n              };\n            });\n        setLoading(false);\n        setError(false);\n      })\n      .catch(er => {\n        setError(true);\n        setLoading(false);\n      });\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return (\n      <div className='overlay'>\n        <div className='loading'>\n          <div className='loadingbar'>\n            <CircularProgress disableShrink />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return (\n        <ul>\n          {/*repositories.map(repo => (\n            <RepoItem key={repo.name} repo={repo} />\n          ))*/}\n        </ul>\n      );\n    } else {\n      if (error) {\n        return <h1>Erro ao carregar, por favor, tente novamente.</h1>;\n      } else return <h1>Não existem repositórios na linguagem selecionada.</h1>;\n    }\n  }\n}\n\nexport default RepoList;\n"]},"metadata":{},"sourceType":"module"}