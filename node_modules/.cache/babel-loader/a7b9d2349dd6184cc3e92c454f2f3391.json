{"ast":null,"code":"import _slicedToArray from \"/home/sergio/Documentos/topi/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sergio/Documentos/topi/web/src/components/RepoList/index.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\nimport RepoItem from '../RepoItem';\nimport Loading from '../Loading';\n\nfunction RepoList({\n  selectedLanguage,\n  repositories,\n  setRepositories\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hasMore = _useState6[0],\n        setHasMore = _useState6[1];\n\n  const _useState7 = useState(1),\n        _useState8 = _slicedToArray(_useState7, 2),\n        pageNumber = _useState8[0],\n        setPageNumber = _useState8[1];\n\n  const _useState9 = useState({\n    items: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        response = _useState10[0],\n        setResponse = _useState10[1];\n\n  const observer = useRef();\n  const lastRepoRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  useEffect(() => setPageNumber(1), [selectedLanguage]); //volta Ã  pagina 1 caso uma nova linguagem seja selecionada\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=${pageNumber}`\n    }).then(resp => {\n      setResponse(resp.data);\n      setHasMore(resp.data.items.length > 0);\n      setLoading(false);\n      setError(false);\n    }).catch(er => {\n      console.log(er);\n      setError(true);\n      setLoading(false);\n    });\n  }, [selectedLanguage, pageNumber]);\n  useEffect(() => {\n    response.total_count === 0 ? setRepositories([]) : setRepositories(() => {\n      const temp = [...repositories, ...response.items];\n      return DupObjArrRemover(temp);\n    });\n    /*eslint-disable */\n  }, [response]);\n  useEffect(() => {\n    setRepositories([]);\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, repositories.map((repo, index) => {\n        if (repositories.length === index + 1) {\n          return React.createElement(\"div\", {\n            className: \"listContainer\",\n            ref: lastRepoRef,\n            key: repo.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, React.createElement(RepoItem, {\n            repo: repo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }), error && React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, \"Erro\"), loading && React.createElement(Loading, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"listContainer\",\n            key: repo.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(RepoItem, {\n            repo: repo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }), error && React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, \"Erro\"), loading && React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, \"Loading...\"));\n        }\n      }));\n    } else {\n      if (error) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"Erro ao carregar. Por favor, tente novamente.\");\n      } else return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"N\\xE3o existem reposit\\xF3rios na linguagem selecionada.\");\n    }\n  }\n}\n\nexport default RepoList;","map":{"version":3,"sources":["/home/sergio/Documentos/topi/web/src/components/RepoList/index.js"],"names":["React","useState","useEffect","useRef","useCallback","axios","DupObjArrRemover","RepoItem","Loading","RepoList","selectedLanguage","repositories","setRepositories","loading","setLoading","error","setError","hasMore","setHasMore","pageNumber","setPageNumber","items","response","setResponse","observer","lastRepoRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","language","replace","method","url","then","resp","data","length","catch","er","console","log","total_count","temp","Array","isArray","map","repo","index","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAO,aAAP;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,YAApB;AAAkCC,EAAAA;AAAlC,CAAlB,EAAuE;AAAA,oBACvCX,QAAQ,CAAC,IAAD,CAD+B;AAAA;AAAA,QAC9DY,OAD8D;AAAA,QACrDC,UADqD;;AAAA,qBAE3Cb,QAAQ,CAAC,KAAD,CAFmC;AAAA;AAAA,QAE9Dc,KAF8D;AAAA,QAEvDC,QAFuD;;AAAA,qBAGvCf,QAAQ,CAAC,IAAD,CAH+B;AAAA;AAAA,QAG9DgB,OAH8D;AAAA,QAGrDC,UAHqD;;AAAA,qBAIjCjB,QAAQ,CAAC,CAAD,CAJyB;AAAA;AAAA,QAI9DkB,UAJ8D;AAAA,QAIlDC,aAJkD;;AAAA,qBAMrCnB,QAAQ,CAAC;AAAEoB,IAAAA,KAAK,EAAE;AAAT,GAAD,CAN6B;AAAA;AAAA,QAM9DC,QAN8D;AAAA,QAMpDC,WANoD;;AAQrE,QAAMC,QAAQ,GAAGrB,MAAM,EAAvB;AAEA,QAAMsB,WAAW,GAAGrB,WAAW,CAC7BsB,IAAI,IAAI;AACN,QAAIb,OAAJ,EAAa;AACb,QAAIW,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACrD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6Bd,OAAjC,EAA0C;AACxCG,QAAAA,aAAa,CAACY,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;AACF,KAJkB,CAAnB;AAKA,QAAIN,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACX,GAV4B,EAW7B,CAACb,OAAD,EAAUI,OAAV,CAX6B,CAA/B;AAcAf,EAAAA,SAAS,CAAC,MAAMkB,aAAa,CAAC,CAAD,CAApB,EAAyB,CAACV,gBAAD,CAAzB,CAAT,CAxBqE,CAwBd;;AAEvDR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgC,QAAQ,GAAGxB,gBAAgB,CAACyB,OAAjB,CAAyB,YAAzB,EAAuC,IAAvC,CAAf;AAEA9B,IAAAA,KAAK,CAAC;AACJ+B,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAG,yDAAwDH,QAAS,oBAAmBf,UAAW;AAFjG,KAAD,CAAL,CAIGmB,IAJH,CAIQC,IAAI,IAAI;AACZhB,MAAAA,WAAW,CAACgB,IAAI,CAACC,IAAN,CAAX;AACAtB,MAAAA,UAAU,CAACqB,IAAI,CAACC,IAAL,CAAUnB,KAAV,CAAgBoB,MAAhB,GAAyB,CAA1B,CAAV;AACA3B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KATH,EAUG0B,KAVH,CAUSC,EAAE,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA3B,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAdH;AAeD,GAlBQ,EAkBN,CAACJ,gBAAD,EAAmBS,UAAnB,CAlBM,CAAT;AAoBAjB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACwB,WAAT,KAAyB,CAAzB,GACIlC,eAAe,CAAC,EAAD,CADnB,GAEIA,eAAe,CAAC,MAAM;AACpB,YAAMmC,IAAI,GAAG,CAAC,GAAGpC,YAAJ,EAAkB,GAAGW,QAAQ,CAACD,KAA9B,CAAb;AACA,aAAOf,gBAAgB,CAACyC,IAAD,CAAvB;AACD,KAHc,CAFnB;AAMA;AACD,GARQ,EAQN,CAACzB,QAAD,CARM,CAAT;AAUApB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAFQ,EAEN,CAACF,gBAAD,CAFM,CAAT;;AAIA,MAAIG,OAAJ,EAAa;AACX,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,QAAImC,KAAK,CAACC,OAAN,CAActC,YAAd,KAA+BA,YAAY,CAAC8B,MAAhD,EAAwD;AACtD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG9B,YAAY,CAACuC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,YAAIzC,YAAY,CAAC8B,MAAb,KAAwBW,KAAK,GAAG,CAApC,EAAuC;AACrC,iBACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,GAAG,EAAE3B,WAApC;AAAiD,YAAA,GAAG,EAAE0B,IAAI,CAACE,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGpC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFZ,EAGGF,OAAO,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHd,CADF;AAOD,SARD,MAQO;AACL,iBACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,GAAG,EAAEsC,IAAI,CAACE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEF,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGpC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFZ,EAGGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHd,CADF;AAOD;AACF,OAlBA,CADH,CADF;AAuBD,KAxBD,MAwBO;AACL,UAAIE,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAAP;AACD,OAFD,MAEO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAAP;AACR;AACF;AACF;;AAED,eAAeN,QAAf","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport DupObjArrRemover from '../../utils/DupObjArrRemover';\nimport './style.css';\n\nimport RepoItem from '../RepoItem';\nimport Loading from '../Loading';\n\nfunction RepoList({ selectedLanguage, repositories, setRepositories }) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const [response, setResponse] = useState({ items: [] });\n\n  const observer = useRef();\n\n  const lastRepoRef = useCallback(\n    node => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting && hasMore) {\n          setPageNumber(prevPageNumber => prevPageNumber + 1);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  useEffect(() => setPageNumber(1), [selectedLanguage]); //volta Ã  pagina 1 caso uma nova linguagem seja selecionada\n\n  useEffect(() => {\n    let language = selectedLanguage.replace('JavaScript', 'JS');\n\n    axios({\n      method: 'GET',\n      url: `https://api.github.com/search/repositories?q=language:${language}&sort=stars&page=${pageNumber}`\n    })\n      .then(resp => {\n        setResponse(resp.data);\n        setHasMore(resp.data.items.length > 0);\n        setLoading(false);\n        setError(false);\n      })\n      .catch(er => {\n        console.log(er);\n        setError(true);\n        setLoading(false);\n      });\n  }, [selectedLanguage, pageNumber]);\n\n  useEffect(() => {\n    response.total_count === 0\n      ? setRepositories([])\n      : setRepositories(() => {\n          const temp = [...repositories, ...response.items];\n          return DupObjArrRemover(temp);\n        });\n    /*eslint-disable */\n  }, [response]);\n\n  useEffect(() => {\n    setRepositories([]);\n  }, [selectedLanguage]);\n\n  if (loading) {\n    return <Loading />;\n  } else {\n    if (Array.isArray(repositories) && repositories.length) {\n      return (\n        <ul>\n          {repositories.map((repo, index) => {\n            if (repositories.length === index + 1) {\n              return (\n                <div className='listContainer' ref={lastRepoRef} key={repo.id}>\n                  <RepoItem repo={repo} />\n                  {error && <p>Erro</p>}\n                  {loading && <Loading />}\n                </div>\n              );\n            } else {\n              return (\n                <div className='listContainer' key={repo.id}>\n                  <RepoItem repo={repo} />\n                  {error && <p>Erro</p>}\n                  {loading && <p>Loading...</p>}\n                </div>\n              );\n            }\n          })}\n        </ul>\n      );\n    } else {\n      if (error) {\n        return <h1>Erro ao carregar. Por favor, tente novamente.</h1>;\n      } else return <h1>NÃ£o existem repositÃ³rios na linguagem selecionada.</h1>;\n    }\n  }\n}\n\nexport default RepoList;\n"]},"metadata":{},"sourceType":"module"}